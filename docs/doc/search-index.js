var searchIndex = JSON.parse('{\
"ipv4_heatmap":{"doc":"","t":[3,0,12,11,11,11,11,11,11,0,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,0,12,5,0,12,12,12,0,11,11,11,11,11,11,11,11,11,0,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,5,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,4,13,13,11,11,11,11,17,11,11,11,11,13,17,17,17,17,13,17,17,17,17,13,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,17,17,17,17,11,11,11,11,11,11,5,13,17,17,17,17,13,17,17,17,17,5,13,17,17,17,17,13,17,17,17,17,13,17,17,17,17,13,17,17,17,17,13,17,17,17,17,13,17,17,17,17,13,17,17,17,17,5,5,13,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,13,17,17,17,17,11,11,11,11,11,11,13,17,17,17,17,11,11,17,13,17,17,17,17,13,17,17,17,17,13,17,17,17,17,5,5,5,5,5,5,3,11,11,5,5,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12],"n":["Args","annotations","annotations","approx_from","approx_into","augment_args","augment_args_for_update","borrow","borrow_mut","colors","deref","deref_mut","drop","filename","fmt","from","from_arg_matches","from_arg_matches_mut","from_subset","init","into","into_app","into_app_for_update","invert","is_in_subset","labels","legend_file","main","outlines","output","palette","reverse","shades","to_subset","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","utils","value_from","value_into","vzip","Annotation","AnnotationCollection","Label","Outline","Shade","approx_from","approx_from","approx_from","approx_from","approx_from","approx_into","approx_into","approx_into","approx_into","approx_into","border_color","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cidr","cidr","cidr","cidr","color","color","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","display_prefix","drop","drop","drop","drop","drop","eq","eq","eq","eq","fill","fill_color","fmt","fmt","fmt","fmt","font","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","label","label","label_color","label_font","labels","load_config","ne","ne","ne","ne","outlines","shades","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value_from","value_from","value_from","value_from","value_from","value_into","value_into","value_into","value_into","value_into","vzip","vzip","vzip","vzip","vzip","Blue","ColorChannel","ColorPalette","Green","Red","approx_from","approx_from","approx_into","approx_into","black","borrow","borrow","borrow_mut","borrow_mut","brbg","brbg_blue","brbg_green","brbg_legend","brbg_red","bupu","bupu_blue","bupu_green","bupu_legend","bupu_red","cividis","cividis_blue","cividis_green","cividis_legend","cividis_red","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","from","from","from_subset","from_subset","inferno","inferno_blue","inferno_green","inferno_legend","inferno_red","init","init","into","into","is_in_subset","is_in_subset","legend_cols","magma","magma_blue","magma_green","magma_legend","magma_red","mako","mako_blue","mako_green","mako_legend","mako_red","palette","plasma","plasma_blue","plasma_green","plasma_legend","plasma_red","puor","puor_blue","puor_green","puor_legend","puor_red","rdbu","rdbu_blue","rdbu_green","rdbu_legend","rdbu_red","rdgy","rdgy_blue","rdgy_green","rdgy_legend","rdgy_red","rdylbu","rdylbu_blue","rdylbu_green","rdylbu_legend","rdylbu_red","reds","reds_blue","reds_green","reds_legend","reds_red","rocket","rocket_blue","rocket_green","rocket_legend","rocket_red","select_palette","set_palette","spectral","spectral_blue","spectral_green","spectral_legend","spectral_red","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","turbo","turbo_blue","turbo_green","turbo_legend","turbo_red","type_id","type_id","value_from","value_from","value_into","value_into","viridis","viridis_blue","viridis_green","viridis_legend","viridis_red","vzip","vzip","white","ylgnbu","ylgnbu_blue","ylgnbu_green","ylgnbu_legend","ylgnbu_red","ylorbr","ylorbr_blue","ylorbr_green","ylorbr_legend","ylorbr_red","ylorrd","ylorrd_blue","ylorrd_green","ylorrd_legend","ylorrd_red","annotate_cidrs","draw_blended_text_mut","layout_glyphs","outline_cidrs","draw_blended_rect_mut","shade_cidrs","BoundingBox","approx_from","approx_into","bbox","bbox_from_cidr","borrow","borrow_mut","deref","deref_mut","drop","eq","fmt","from","from_subset","height","hil_xy_from_s","init","into","ip_to_numeric","is_in_subset","ne","output_legend","read_lines","to_subset","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","value_from","value_into","vzip","width","x","xmax","xmin","y","ymax","ymin"],"q":["ipv4_heatmap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ipv4_heatmap::annotations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ipv4_heatmap::colors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ipv4_heatmap::labels","","","ipv4_heatmap::outlines","ipv4_heatmap::shades","","ipv4_heatmap::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","file containing JSON CIDR annotations","","","","","","","","","","","input file of IPs","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","invert the chosen color palette","","","output an SVG colourbar legend to this file","","","heatmap output file; extenstion determines format","color palette to use; one of (viridis magma inferno plasma …","reverse the heatmap base (i.e. white background, black …","","","","","","","","","","","","","","","","Annotations on top of the heatmap can be outlines, shades, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Open and read the spefified annotations JSON file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Given a vector of label annotations, draw the labels.","This is here for the eventual transparency solution","This is here for the eventual transparency solution","Given a vector of CIDRs, draw a border around them.","This is a hack to do what the default <code>draw_rect_mut</code> won’…","Given a vector of CIDRs, shade them in.","CIDRs in Hilbert space can represent a bounding box","","","Given the first (numeric) IP address in a CIDR block and …","Given a CIDR in <code>IP/##</code> form, return the bounding box.","","","","","","","","Returns the argument unchanged.","","","Convert an IPv4 address (in integer form) to a 12th order …","","Calls <code>U::from(self)</code>.","Convert an characrter IPv4 address into an integer.","","","Given a filename or path and palette name (+ whether the …","Given a filename or <code>Path</code>, open the text file for reading …","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,2,3,4,5,6,2,3,4,5,6,2,2,3,4,5,6,2,3,4,5,6,2,3,4,5,3,5,2,3,4,5,6,2,3,4,5,6,2,2,2,3,4,5,6,3,4,5,6,4,2,3,4,5,6,5,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,5,2,2,6,0,3,4,5,6,6,6,2,3,4,5,6,2,3,4,5,6,2,2,3,3,4,4,5,5,6,6,2,2,3,3,4,4,5,5,6,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,2,3,4,5,6,7,0,0,7,7,7,8,7,8,0,7,8,7,8,8,0,0,0,0,8,0,0,0,0,8,0,0,0,0,7,8,7,8,7,8,7,8,7,8,7,8,7,8,8,0,0,0,0,7,8,7,8,7,8,0,8,0,0,0,0,8,0,0,0,0,0,8,0,0,0,0,8,0,0,0,0,8,0,0,0,0,8,0,0,0,0,8,0,0,0,0,8,0,0,0,0,8,0,0,0,0,0,0,8,0,0,0,0,7,8,7,8,7,7,8,8,7,7,8,8,8,0,0,0,0,7,8,7,8,7,8,8,0,0,0,0,7,8,0,8,0,0,0,0,8,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,9,9,9,9,9,9,9,9,9,9,0,9,9,0,9,9,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],"f":[null,null,null,[[],["result",4]],[[],["result",4]],[[["command",6]],["command",6]],[[["command",6]],["command",6]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],null,[[["args",3],["formatter",3]],["result",6]],[[]],[[["argmatches",3]],["result",4,[["args",3],["error",3]]]],[[["argmatches",3]],["result",4,[["args",3],["error",3]]]],[[["",0]]],[[],["usize",0]],[[]],[[],["command",6]],[[],["command",6]],null,[[["",0]],["bool",0]],null,null,[[]],null,null,null,null,null,[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["args",3],["argmatches",3]],["result",4,[["error",3]]]],[[["args",3],["argmatches",3]],["result",4,[["error",3]]]],null,[[],["result",4]],[[],["result",4]],[[]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,null,null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["annotation",3]]]],null,[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["outline",3],["outline",3]],["bool",0]],[[["shade",3],["shade",3]],["bool",0]],[[["label",3],["label",3]],["bool",0]],[[["annotationcollection",3],["annotationcollection",3]],["bool",0]],null,null,[[["outline",3],["formatter",3]],["result",6]],[[["shade",3],["formatter",3]],["result",6]],[[["label",3],["formatter",3]],["result",6]],[[["annotationcollection",3],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,null,null,[[["asref",8,[["path",3]]]],["annotationcollection",3]],[[["outline",3],["outline",3]],["bool",0]],[[["shade",3],["shade",3]],["bool",0]],[[["label",3],["label",3]],["bool",0]],[[["annotationcollection",3],["annotationcollection",3]],["bool",0]],null,null,[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["colorchannel",4],["colorchannel",4]],["bool",0]],[[["colorpalette",4],["colorpalette",4]],["bool",0]],[[["colorchannel",4],["formatter",3]],["result",6]],[[["colorpalette",4],["formatter",3]],["result",6]],[[]],[[]],[[["",0]]],[[["",0]]],null,null,null,null,null,[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[]],null,null,null,null,null,null,null,null,null,null,[[],["colorpalette",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["bool",0]],["vec",3,[["rgba",3,[["u8",0]]]]]],[[["colorpalette",4],["colorchannel",4]]],null,null,null,null,null,[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["imagebuffer",3],["vec",3,[["label",3]]]]],[[["",0],["i32",0],["i32",0],["scale",3],["font",4],["str",0]]],[[["scale",3],["font",4],["str",0],["fnmut",8]]],[[["imagebuffer",3],["vec",3,[["outline",3]]]]],[[["",0],["rect",3]]],[[["imagebuffer",3],["vec",3,[["shade",3]]]]],null,[[],["result",4]],[[],["result",4]],[[["u32",0],["u8",0]],["boundingbox",3]],[[],["boundingbox",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["boundingbox",3],["boundingbox",3]],["bool",0]],[[["boundingbox",3],["formatter",3]],["result",6]],[[]],[[["",0]]],[[["boundingbox",3]],["u32",0]],[[["u32",0],["i16",0]]],[[],["usize",0]],[[]],[[],["u32",0]],[[["",0]],["bool",0]],[[["boundingbox",3],["boundingbox",3]],["bool",0]],[[["bool",0]]],[[],["result",6,[["lines",3,[["bufreader",3,[["file",3]]]]]]]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["result",4]],[[],["result",4]],[[]],[[["boundingbox",3]],["u32",0]],[[["boundingbox",3]],["i32",0]],null,null,[[["boundingbox",3]],["i32",0]],null,null],"p":[[3,"Args"],[3,"Annotation"],[3,"Outline"],[3,"Shade"],[3,"Label"],[3,"AnnotationCollection"],[4,"ColorChannel"],[4,"ColorPalette"],[3,"BoundingBox"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
